repos:
  - repo: local
    hooks:
      - id: django-coverage
        name: Django Coverage
        entry: bash -c 'coverage run --source='.' manage.py test && coverage html || (open htmlcov/index.html && false)'
        language: system
        always_run: true
        stages: [commit]
        pass_filenames: false

  #  - repo: local
#    hooks:
#      - id: django-tests
#        name: Django Tests
#        entry: bash -c 'python manage.py test'
#        language: system
#        always_run: true
#        stages: [commit]

  - repo: local
    hooks:
      - id: black
        name: Black
        entry: poetry run black
        language: system
        types: [python]
        files: .

  - repo: local
    hooks:
      - id: isort
        name: isort
        entry: poetry run isort
        language: system
        types: [python]
        args: [ "--profile", "black" ]
        files: .

  - repo: local
    hooks:
      - id: flake8
        name: Flake8
        entry: poetry run flake8
        language: system
        types: [python]
        files: .

  - repo: local
    hooks:
      - id: mypy
        name: MyPy
        # Here we are adding PYTHONPATH to the environment so that mypy can find copilot.settings
        # This should not be needed, but it is a workaround for now as it seems to be a problem with mypy
        # and it's django plugin when supporting local Django Apps that are external to the project.
        # Once those plugins are released and we can depend on them, we can remove this.
        # However, this may still be needed for development purposes - when testing local.
        entry: sh -c 'PYTHONPATH=$PWD poetry run mypy "$@"' --
        #entry: poetry run mypy
        language: system
        types: [python]
        files: .

  - repo: local
    hooks:
      - id: mdformat
        name: mdformat
        entry: mdformat
        language: python
        # Specify additional_dependencies if your pre-commit runs in an isolated environment
#        additional_dependencies: [mdformat, mdformat-black]
        additional_dependencies:
          - mdformat-toc
          - mdformat-gfm
        args: ["--wrap", "120", "--number", "--end-of-line", "lf"]
        types: [markdown]
        files: .

#  - repo: https://github.com/pre-commit/mirrors-mypy
#    rev: v1.9.0
#    hooks:
#      - id: mypy
#        additional_dependencies: [types-setuptools, types-requests]

  - repo: local
    hooks:
      - id: copyright-check
        name: Copyright Check
        entry: python -m scripts.check_copyright
        language: system
#        types: [python, javascript, html]
        files: '.*\.(py|js|html)$'
        #        files: .*\.(py|js|html)$
#        files: .
        exclude: '.*/migrations/.*'
        pass_filenames: true

  - repo: local
    hooks:
      - id: version-check
        name: Version Sync Check
        entry: python -m scripts.check_versions_sync
        language: system
        files: '(\.pre-commit-config\.yaml|pyproject\.toml)'
        pass_filenames: false
  
  - repo: local
    hooks:
      - id: semantic-commit-message
        name: 'Check Commit Message Format'
        entry: python -m scripts.check_commit_msg
        language: system
        stages: [commit-msg]
        files: ''
